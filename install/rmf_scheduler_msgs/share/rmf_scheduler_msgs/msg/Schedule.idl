// generated from rosidl_adapter/resource/msg.idl.em
// with input from rmf_scheduler_msgs/msg/Schedule.msg
// generated code does not contain a copyright notice

#include "rmf_scheduler_msgs/msg/Payload.idl"

module rmf_scheduler_msgs {
  module msg {
    @verbatim (language="comment", text=
      "Name to identify the schedule, must be unique across all schedules.")
    struct Schedule {
      string name;

      @verbatim (language="comment", text=
        "unix timestamp in seconds")
      int64 created_at;

      @verbatim (language="comment", text=
        "┌─────────────seconds (0 - 59)" "\n"
        "│ ┌───────────── minute (0 - 59)" "\n"
        "│ │ ┌───────────── hour (0 - 23)" "\n"
        "│ │ │ ┌───────────── day of the month (1 - 31)" "\n"
        "│ │ │ │ ┌───────────── month (1 - 12)" "\n"
        "│ │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday)" "\n"
        "│ │ │ │ │ │ ┌───────────── years (1970 - 2099) (optional)" "\n"
        "│ │ │ │ │ │ │" "\n"
        "* * * * * * *" "\n"
        "" "\n"
        "| Field | Required | Allowed value | Allowed special characters |" "\n"
        "| --- | --- | --- | --- |" "\n"
        "| seconds | yes | 0-59 | `*` `,` `-` |" "\n"
        "| minutes | yes | 0-59 | `*` `,` `-` |" "\n"
        "| hours | yes | 0-23 | `*` `,` `-` |" "\n"
        "| days of month | 1-31 | `*` `,` `-` `?` `L` `W` |" "\n"
        "| months | yes | 1-12 | `*` `,` `-` |" "\n"
        "| days of week | yes | `*` `,` `-` `?` `L` `#` |" "\n"
        "| years | no | 1970-2099 | `*` `,` `-` |" "\n"
        "" "\n"
        "The special characters have the following meaning:" "\n"
        "" "\n"
        "| Special character | Meaning | Description |" "\n"
        "| --- | --- | --- |" "\n"
        "| `*` | all values | selects all values within a field |" "\n"
        "| `?` | no specific value | specify one field and leave the other unspecified |" "\n"
        "| `-` | range | specify ranges |" "\n"
        "| `,` | comma | specify additional values |" "\n"
        "| `/` | slash | speficy increments |" "\n"
        "| `L` | last | last day of the month or last day of the week |" "\n"
        "| `W` | weekday | the weekday nearest to the given day |" "\n"
        "| `#` | nth |  specify the Nth day of the month |" "\n"
        "Examples:" "\n"
        "" "\n"
        "| CRON | Description |" "\n"
        "| --- | --- |" "\n"
        "| * * * * * * | Every second |" "\n"
        "| */5 * * * * ? | Every 5 seconds |" "\n"
        "| 0 */5 */2 * * ? | Every 5 minutes, every 2 hours |" "\n"
        "| 0 */2 */2 ? */2 */2 | Every 2 minutes, every 2 hours, every 2 days of the week, every 2 months |" "\n"
        "| 0 15 10 * * ? * | 10:15 AM every day |" "\n"
        "| 0 0/5 14 * * ? | Every 5 minutes starting at 2 PM and ending at 2:55 PM, every day |" "\n"
        "| 0 10,44 14 ? 3 WED | 2:10 PM and at 2:44 PM every Wednesday of March |" "\n"
        "| 0 15 10 ? * MON-FRI | 10:15 AM every Monday, Tuesday, Wednesday, Thursday and Friday |" "\n"
        "| 0 15 10 L * ? | 10:15 AM on the last day of every month |" "\n"
        "| 0 0 12 1/5 * ? | 12 PM every 5 days every month, starting on the first day of the month |" "\n"
        "| 0 11 11 11 11 ? | Every November 11th at 11:11 AM |" "\n"
        "" "\n"
        "Reference: https://github.com/mariusbancila/croncpp/blob/999f7685ab683b58872386c0aa019acf97c6570a/README.md")
      string schedule;

      @verbatim (language="comment", text=
        "unix time in secs")
      int64 start_at;

      @verbatim (language="comment", text=
        "unix time in secs")
      @default (value=9223372036854775807)
      int64 finish_at;

      @default (value="default")
      string group;

      rmf_scheduler_msgs::msg::Payload payload;
    };
  };
};
